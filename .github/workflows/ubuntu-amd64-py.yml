---
name: Ubuntu 24.04 AMD64 Python install

on:
  push:
    branches: [ "main", "rc" ]
  pull_request:
    branches: [ "main", "rc" ]

jobs:

  # Note that identifiers are not allowed to contain "."'s. 
  ubuntu-u2404-amd64-py:

    runs-on: ubuntu-24.04-arm

    steps:
    
    - name: Git checkout
      uses: actions/checkout@v4
      with:
        ref: main

    #- name: Download release
    #  uses: robinraju/release-downloader@v1
    #  with:
    #    repository: 'awsteiner/o2scl'
    #    tag: 'v0.930'
    #    fileName: 'o2scl-0.930.tar.gz'

    #- name: untar release
    #  run: |
    #       tar xvzf o2scl-0.930.tar.gz
    #       mv o2scl-0.930/* .
    #       rmdir o2scl-0.930

    - name: Cache action
      uses: actions/cache@v4
      with:
        path: ~/.ccache
        # Necessary to cache the ccache data on every run
        key: cache-ubuntu-amd64-py-${{ github.run_id }}
        restore-keys: |
          cache-ubuntu-amd64-py

    - name: Install apt packages (first pass)
      run: sudo apt-get -y update && sudo apt-get -y install g++ make autoconf automake libtool git curl cmake python3 libz-dev libsz2 imagemagick python3-pip

    - name: Install HDF5
      run: |
        curl -L "https://github.com/HDFGroup/hdf5/releases/download/hdf5_1.14.4.3/hdf5-1.14.4-3.tar.gz" -o hdf5-1.14.4-3.tar.gz && tar xvzf hdf5-1.14.4-3.tar.gz && cd hdf5-1.14.4-3 && ./configure --with-zlib --with-szlib --prefix=/home/runner/hdf5 && make && make install

    - name: Install python packages
      run: |
        pip install --break-system-packages numpy==2.0.2 
        HDF5_DIR=/home/runner/hdf5 pip install --break-system-packages --no-binary=h5py h5py==3.12.1
        pip install --break-system-packages -r docker/v0.930_u24.04_req_amd64.txt
        pip install --break-system-packages --no-deps normflows==1.7.3 pipdeptree==2.24.0
        pip install --break-system-packages torch==2.5.1 --index-url https://download.pytorch.org/whl/cpu

    - name: Install apt packages (second pass)
      run: sudo apt-get -y install ccache gzip tar liblapack-dev libopenblas-dev libboost-all-dev libeigen3-dev libfftw3-dev libgsl-dev libreadline-dev texlive dvipng texlive-latex-extra cm-super libcairo2-dev zlib1g-dev

    - name: Find numpy
      run: |
        ls /home/runner/.local/lib/python3.12/site-packages/numpy
        pip show numpy

    - name: Find hdf5
      run: |
        ls -lR /home/runner/hdf5

    - name: Set up autotools scripts
      run:
        ./autogen.sh

    - name: Configure
      run: |
        export CC='ccache gcc'
        export CXX='ccache g++'
        export CCACHE_DIR=~/.ccache
        export CXXFLAGS+="-O3 -DO2SCL_PLAIN_HDF5_HEADER -DO2SCL_HDF5_COMP -I/home/runner/hdf5/include -I/home/runner/.local/lib/python3.12/site-packages/numpy/_core/include/"
        export LDFLAGS="-L/home/runner/hdf5/lib"
        mkdir -p ${PWD}/build
        ./configure --prefix=${PWD}/build --enable-shared --disable-static --enable-eigen --enable-fftw --enable-openmp --enable-python

    - name: Install o2sclpy
      run: |
        git clone https://github.com/awsteiner/o2sclpy
        cd o2sclpy
        git checkout 46be2315585
        pip3 install --break-system-packages --editable .

    - name: Build and install o2scl
      run: |
        make VERBOSE=1 blank-doc -j4 -O
        make VERBOSE=1 -j4 -O
        make VERBOSE=1 install -j4 -O

    - name: Try acol
      run: |
        export LD_LIBRARY_PATH+=:${PWD}/build
        ${PWD}/build/bin/acol -v

    - name: Check o2scl
      run: |
        export LD_LIBRARY_PATH+=:${PWD}/build
        make VERBOSE=1 o2scl-test -j4 -O -k

    - name: Test o2sclpy and run o2graph
      run: |
        export O2SCL_ADDL_LIBS=/usr/lib/gcc/x86_64-linux-gnu/13/libgomp.so
        export LD_LIBRARY_PATH+=:${PWD}/build:/home/runner/work/o2scl/o2scl/build/lib
        cd o2sclpy && pytest -s -v
        o2graph -v
