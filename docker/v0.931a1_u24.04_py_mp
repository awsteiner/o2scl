FROM ubuntu:24.04 AS working
LABEL org.opencontainers.image.authors="awsteiner0@protonmail.com"
LABEL description="A full development version with python, eigen, \
armadillo, fftw, OpenMP, and HDF5 compression support."

# ───────────────────────────────────────────────────────────────────
# To fix tzdata asking for a timezone during installation
# can set up later using sudo dpkg-reconfigure tzdata I think.

ARG DEBIAN_FRONTEND=noninteractive

# ───────────────────────────────────────────────────────────────────
# Install apt packages, first pass

# Install dependencies. We need curl to test downloading EOSs for
# o2sclpy. We could use "--no-install-recommends" to
# make the image smaller, but that causes problems and many of the
# recommendations are good, e.g. manpages and less.

RUN apt-get -y update && apt-get \
  -y install g++ make autoconf automake libtool git curl cmake \
  python3 libz-dev libsz2 imagemagick && apt-get clean 

# ───────────────────────────────────────────────────────────────────
# The tensorflow package is compiled with HDF5 1.14.2, so we install
# that instead of the Ubuntu package in order to ensure we're matching
# HDF5 libraries. 

WORKDIR /opt
RUN curl -L "https://github.com/HDFGroup/hdf5/releases/download/hdf5-1_14_2/hdf5-1_14_2.tar.gz" \
  -o hdf5-1.14.2.tar.gz
RUN tar xvzf hdf5-1.14.2.tar.gz
RUN rm hdf5-1.14.2.tar.gz
# The github release has a non-traditional directory name
WORKDIR /opt/hdfsrc
RUN ./configure --with-zlib --with-szlib --prefix=/usr/local/hdf5
RUN make
RUN make install

# ───────────────────────────────────────────────────────────────────
# Install apt packages, second pass
#
# The library libcairo2-dev is required for pycairo which in
# turn is required by imagemagick (which is required by o2sclpy's
# latex_to_png() function). 

RUN apt-get -y update && apt-get \
  -y install libgsl-dev libreadline-dev libboost-all-dev libeigen3-dev \
  libopenblas-dev liblapack-dev libarpack2-dev libsuperlu-dev \
  libfftw3-dev texlive dvipng texlive-latex-extra libarmadillo-dev \
  cm-super python3-pip libcairo2-dev libquadmath0 zlib1g-dev

# ───────────────────────────────────────────────────────────────────
# Install Python packages

WORKDIR /opt

# We have to fix the version for the numpy installation package before
# we install h5py (since h5py requires numpy). We cannot use later
# versions of numpy because of restrictions from tensorflow. 
RUN pip3 install --break-system-packages numpy==2.0.2

# Ensure h5py uses the updated version of HDF5
RUN HDF5_DIR=/usr/local/hdf5 pip3 install --break-system-packages \
  --no-binary=h5py h5py==3.12.1

# Install the remaining python packages from the requirements file.
# The normflows package includes extra nvidia packages, and pipdeptree
# includes a dependency on pip, so those are installed separately.

COPY v0.930_u24.04_req.txt ./
RUN pip3 install --break-system-packages -r v0.930_u24.04_req.txt
RUN pip3 install --break-system-packages --no-deps normflows==1.7.3 \
  pipdeptree==2.24.0
RUN pip3 install --break-system-packages torch==2.5.1 \
  --index-url https://download.pytorch.org/whl/cpu

# This is the set of commands used to construct the original
# requirements file
#
#RUN pip3 install --break-system-packages pytest Pillow tensorflow-cpu \
#  numpy scipy matplotlib yt scikit-learn keras
#RUN pip3 install --break-system-packages --no-deps normflows pipdeptree
# This avoids all of the GPU libraries we don't need
#RUN pip3 install --break-system-packages torch==2.5.1 \
#  --index-url https://download.pytorch.org/whl/cpu
#RUN pip3 freeze > v0.930_u24.04_req.txt
#RUN cat v0.930_u24.04_req.txt
#RUN XXX

# ───────────────────────────────────────────────────────────────────
# Install O2scl

#RUN curl -L \
#https://github.com/awsteiner/o2scl/releases/download/v0.930/o2scl-0.930.tar.gz \
#  --output o2scl-0.930.tar.gz
#RUN tar xzf o2scl-0.930.tar.gz
#WORKDIR /opt/o2scl-0.930

RUN git clone https://github.com/awsteiner/o2scl
WORKDIR /opt/o2scl
RUN git fetch && git pull && git checkout ad3520b471 && autoreconf -i

# We disable static to keep the image small

RUN LDFLAGS="-L/usr/local/hdf5/lib" CXXFLAGS="-O3 -DO2SCL_PLAIN_HDF5_HEADER -DO2SCL_HDF5_COMP -I/usr/include -I/usr/local/lib/python3.12/dist-packages/numpy/_core/include -I/usr/local/hdf5/include" ./configure --enable-eigen --enable-openmp --enable-fftw --enable-python --disable-static --enable-multip
RUN make blank-doc && make && make install 

WORKDIR /opt
ENV LD_LIBRARY_PATH=/usr/local/lib

# ───────────────────────────────────────────────────────────────────
# Install o2sclpy via pip

RUN git clone https://github.com/awsteiner/o2sclpy
WORKDIR /opt/o2sclpy
RUN git fetch && git pull && git checkout dc57dd8595 && \
  pip3 install --break-system-packages . 

# ───────────────────────────────────────────────────────────────────
# To ensure o2graph loads OpenMP appropriately

ENV O2SCL_ADDL_LIBS=/usr/lib/gcc/x86_64-linux-gnu/13/libgomp.so

# ───────────────────────────────────────────────────────────────────
# Run acol and o2graph

WORKDIR /
RUN acol -h && acol -v && o2graph -h && o2graph -v

# ───────────────────────────────────────────────────────────────────
# Run tests

WORKDIR /opt/o2scl
#FROM working
RUN make check && make o2scl-examples && make distclean
WORKDIR /opt/o2sclpy
RUN make testq








