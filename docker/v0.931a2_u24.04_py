ARG BASE=ubuntu:24.04
FROM ${BASE} AS working
LABEL org.opencontainers.image.authors="awsteiner0@protonmail.com"
LABEL description="A full development version with python, eigen, \
armadillo, fftw, OpenMP, and HDF5 compression support."

# Note that it's important that this is after FROM, as this is the
# difference between build arguments defined in global scope versus
# those defined in "per-stage" scope.

ARG CONFIG=

# ───────────────────────────────────────────────────────────────────
# To fix tzdata asking for a timezone during installation
# can set up later using sudo dpkg-reconfigure tzdata I think.

ARG DEBIAN_FRONTEND=noninteractive

# ───────────────────────────────────────────────────────────────────
# Install apt packages, first pass

# Install dependencies. We need curl to test downloading EOSs for
# o2sclpy. We could use "--no-install-recommends" to make the image
# smaller, but that makes things more difficult and many of the
# recommendations are good, e.g. manpages and less.

RUN apt-get -y update && apt-get \
  -y install g++ make autoconf automake libtool git cmake \
  libz-dev libsz2 imagemagick && apt-get clean 

# ───────────────────────────────────────────────────────────────────
# Install apt packages, second pass
#
# The library libcairo2-dev is required for pycairo which in
# turn is required by imagemagick (which is required by o2sclpy's
# latex_to_png() function). 

RUN apt-get -y update && apt-get \
  -y install libgsl-dev libreadline-dev libboost-all-dev libeigen3-dev \
  libopenblas-dev liblapack-dev libarpack2-dev libsuperlu-dev \
  libfftw3-dev texlive dvipng texlive-latex-extra libarmadillo-dev \
  cm-super libcairo2-dev zlib1g-dev

# ───────────────────────────────────────────────────────────────────
# Install Python packages

WORKDIR /opt
RUN pip3 install --break-system-packages --no-deps normflows==1.7.3 \
  pipdeptree==2.24.0
  
# ───────────────────────────────────────────────────────────────────
# Install O2scl

#RUN curl -L \
#https://github.com/awsteiner/o2scl/releases/download/v0.931/o2scl-0.931.tar.gz \
#  --output o2scl-0.931.tar.gz
#RUN tar xzf o2scl-0.931.tar.gz
#WORKDIR /opt/o2scl-0.931

RUN git clone https://github.com/awsteiner/o2scl
WORKDIR /opt/o2scl
RUN git fetch && git pull && git checkout 2cfbda7874db1 && autoreconf -i

# We disable static to keep the image small. Build arguments are not
# available to the shell, so we create an environment variable from
# the build argument.
ENV CONFIG_VAR=${CONFIG}

RUN LDFLAGS="-L/HDF_Group/HDF5/1.14.6/lib" CXXFLAGS="-O3 -DO2SCL_PLAIN_HDF5_HEADER -DO2SCL_HDF5_COMP -I/usr/include -I/usr/local/lib/python3.12/dist-packages/numpy/_core/include -I/HDF_Group/HDF5/1.14.6/include" ./configure --enable-eigen --enable-openmp --enable-fftw --enable-python --disable-static $CONFIG_VAR
FROM working
RUN make blank-doc && make && make install 

WORKDIR /opt
ENV LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib"

# ───────────────────────────────────────────────────────────────────
# Install o2sclpy via pip

RUN git clone https://github.com/awsteiner/o2sclpy
WORKDIR /opt/o2sclpy
RUN git fetch && git pull && git checkout e5c18310126 && \
  pip3 install --break-system-packages . 

# ───────────────────────────────────────────────────────────────────
# To ensure o2graph loads OpenMP appropriately

ENV O2SCL_ADDL_LIBS=/usr/lib/gcc/x86_64-linux-gnu/13/libgomp.so

# ───────────────────────────────────────────────────────────────────
# Run acol and o2graph

WORKDIR /
RUN acol -h && acol -v && o2graph -h && o2graph -v

# ───────────────────────────────────────────────────────────────────
# Run tests

WORKDIR /opt/o2scl
RUN make check && make o2scl-examples && make distclean
WORKDIR /opt/o2sclpy
RUN make testq

