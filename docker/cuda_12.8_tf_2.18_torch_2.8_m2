ARG BASE=nvidia/cuda:12.8.1-cudnn-devel-ubuntu24.04
FROM ${BASE} AS working

# ───────────────────────────────────────────────────────────────────
# To fix tzdata asking for a timezone during installation
# can set up later using sudo dpkg-reconfigure tzdata I think.

ARG DEBIAN_FRONTEND=noninteractive
# Alternatively, ENV DEBIAN_FRONTEND noninteractive

# ───────────────────────────────────────────────────────────────────
# Install Python and pip

RUN apt-get -y update && apt-get -y install \
  python3 python3-pip && apt-get clean 

# ───────────────────────────────────────────────────────────────────
# Install TensorFlow and Torch

# Note that Tensorflow and Torch both include their own cuda libraries
# which are separate from the base image.

ARG TF_VERSION=tensorflow==2.18.0
RUN pip3 install --break-system-packages ${TF_VERSION}
RUN pip3 install --break-system-packages \
  filelock fsspec jinja2 networkx setuptools sympy \
  triton typing-extensions nvidia-cusparselt-cu12
ARG TORCH_VERSION="torch==2.7.0"
ARG TORCH_URL="https://download.pytorch.org/whl/cu128"
RUN pip3 install --break-system-packages --no-deps ${TORCH_VERSION} \
  --index-url ${TORCH_URL}

# If desired, output pip requirements file
ARG OUTPUT_REQ=true
RUN if [ "$OUTPUT_REQ" = "true" ]; then pip3 freeze > req.txt; cat req.txt; fi

# ───────────────────────────────────────────────────────────────────
# Copy the test script, set permissions and environment variables

WORKDIR /opt
COPY tf_check.sh ./
COPY torch_check.sh ./
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/lib/python3.12/dist-packages/nvidia/cusparselt/lib:/usr/local/cuda-12.8/targets/x86_64-linux/lib
RUN chmod 777 tf_check.sh torch_check.sh
WORKDIR /

        




