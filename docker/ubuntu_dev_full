# This dockerfile is for the full development version directly from
# main branch in the current repo, complete with python, armadillo,
# eigen, fftw, OpenMP, regex, and HDF5 compression support. It
# attempts to run all of the o2scl test and examples. It also installs
# and tests the main branch github version of o2sclpy

FROM ubuntu:latest 
MAINTAINER Andrew W. Steiner (awsteiner@mykolab.com)

# -----------------------------------------------------------------
# To fix tzdata asking for a timezone during installation
# can set up later using sudo dpkg-reconfigure tzdata I think.

ARG DEBIAN_FRONTEND=noninteractive

# -----------------------------------------------------------------
# apt packages

RUN apt-get -y update
# compiler, make and gsl
RUN apt-get -y install g++ make libgsl-dev autoconf automake libtool git
# HDF5, ncurses, and readline
RUN apt-get -y install libhdf5-dev libncurses-dev libreadline-dev
# Boost and Eigen
RUN apt-get -y install libboost-all-dev libeigen3-dev
# Armadillo and dependencies
RUN apt-get -y install cmake libopenblas-dev liblapack-dev libarpack2-dev
RUN apt-get -y install libsuperlu-dev libarmadillo-dev libfftw3-dev
# We need curl to test downloading EOSs for o2sclpy
RUN apt-get -y install curl

# -----------------------------------------------------------------
# Install o2scl

WORKDIR /opt
RUN git clone https://github.com/awsteiner/o2scl
WORKDIR /opt/o2scl
RUN autoreconf -i
RUN LDFLAGS="-larmadillo -llapack -lblas -lncurses" CXXFLAGS="-O3 -DO2SCL_UBUNTU_HDF5 -DO2SCL_HDF5_PRE_1_12 -DO2SCL_REGEX -DO2SCL_HDF5_COMP -I/usr/include" ./configure --enable-eigen --enable-armadillo --enable-openmp --enable-fftw --enable-python
RUN make blank-doc
RUN make
RUN make install
WORKDIR /
ENV LD_LIBRARY_PATH /usr/local/lib
RUN acol -h
RUN acol -v

# --------------------------------------------------------------------------
# Since we're enabling python extensions, we need to install python
# and install packages before we run o2scl-test, so we do that now

RUN apt-get -y install python3 python3-pip texlive dvipng python3-h5py
RUN apt-get -y install texlive-latex-extra cm-super
# We need pillow to compare images for o2sclpy tests
RUN pip3 install numpy scipy yt matplotlib requests pytest Pillow

# --------------------------------------------------------------------------
# O2scl testing and examples

WORKDIR /opt/o2scl
RUN make o2scl-test
RUN make o2scl-examples

# --------------------------------------------------------------------------
# Install o2sclpy via pip

WORKDIR /opt
RUN git clone https://github.com/awsteiner/o2sclpy
WORKDIR /opt/o2sclpy
RUN pip3 install .

# --------------------------------------------------------------------------
# To ensure o2graph loads OpenMP appropriately
ENV O2SCL_ADDL_LIBS /usr/lib/gcc/x86_64-linux-gnu/11/libgomp.so

# --------------------------------------------------------------------------
# Test o2sclpy
RUN o2graph -h
RUN o2graph -v
RUN make test






